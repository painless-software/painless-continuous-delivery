# Painless local development with Docker Compose.
# Visit the docs at https://docs.docker.com/compose/

version: '3'

services:
  application:
    build:
      context: .
      dockerfile: deployment/application/Dockerfile
      args:
        REQUIREMENTS: requirements-dev.txt
    environment:
{%- if cookiecutter.framework == 'Django' %}
      - DJANGO_DEBUG=True
{%- elif cookiecutter.framework == 'Flask' %}
      - FLASK_APP=application
      - FLASK_ENV=development
{%- endif %}
{%- if cookiecutter.framework == 'Django' %}
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
{%- elif cookiecutter.framework == 'Flask' %}
    command: ["flask", "run", "--host", "0.0.0.0"]
{%- endif %}
    ports:
{%- if cookiecutter.framework == 'Django' %}
      - "8000:8000"
{%- elif cookiecutter.framework == 'Flask' %}
      - "5000:5000"
{%- endif %}
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - .:/app
    restart: on-failure
{%- if cookiecutter.database in ['Postgres', 'MySQL'] %}
    depends_on:
      - database
{% endif %}

{%- if cookiecutter.database == 'Postgres' %}
  database:
    image: docker.io/bitnami/postgresql:12
    environment:
      POSTGRESQL_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - database_data:/bitnami/postgresql
    restart: on-failure
{%- elif cookiecutter.database == 'MySQL' %}
  database:
    image: docker.io/library/mariadb:10
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: mysql
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
    volumes:
      - database_data:/var/lib/mysql/data
{%- endif %}
{%- if cookiecutter.database in ['Postgres', 'MySQL'] %}

volumes:
  database_data:
    driver: local
{%- endif %}
