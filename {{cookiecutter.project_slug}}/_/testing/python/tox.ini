[tox]
envlist = {{ cookiecutter.tests }}
skipsdist = true

[testenv]
deps = -r{toxinidir}/tests/requirements.txt
commands = pytest {posargs}

[testenv:flake8]
deps = flake8
commands = flake8 {posargs}

[testenv:pylint]
deps =
    {[testenv]deps}
    -r{toxinidir}/requirements.txt
    {% if cookiecutter.framework == 'Django' %}pylint-django
    {%- elif cookiecutter.framework == 'Flask' %}pylint-flask
    {%- else %}pylint
    {%- endif %}
commands = pylint --rcfile tox.ini {posargs:application}

[testenv:behave]
deps =
    {[testenv]deps}
    -r{toxinidir}/requirements.txt
    git+https://github.com/behave/behave
commands = behave {posargs}

[testenv:clean]
deps =
whitelist_externals =
    find
    rm
commands =
    find . -type f -name '*.pyc' -delete
    find . -type d -name __pycache__ -delete
    rm -rf .cache/ .tox/ tests/reports/

[behave]
# default_format = progress
default_tags = -@not_implemented -@xfail
junit = yes
junit_directory = tests/reports
paths = tests/acceptance
show_skipped = no
summary = no

[flake8]
exclude = .cache,.git,.tox,build
max-line-length = {% if cookiecutter.framework == 'Django' %}100{% else %}80{% endif %}

[pylint]
disable = locally-disabled
{% if cookiecutter.framework == 'Django' -%}
good-names = application
load-plugins = pylint_django
{% elif cookiecutter.framework == 'Flask' -%}
load-plugins = pylint_flask
{% endif -%}
min-similarity-lines = 5
output-format = colorized
reports = no

[pytest]
addopts = --junitxml=tests/reports/unittests.xml --strict --verbose
