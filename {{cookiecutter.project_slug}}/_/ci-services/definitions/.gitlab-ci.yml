
variables:
  DOCKER_REGISTRY: {{ cookiecutter.docker_registry }}
{%- if cookiecutter.environment_strategy == 'shared' %}
  TARGET: {{ cookiecutter.project_slug }}
{%- endif %}

services:
- name: docker:dind

stages:
- check
- test
- build
- deploy

.check:
  stage: check
  image: docker.io/painless/tox
  only:
  - merge_requests
  - master

.test:
  stage: test
  image: docker.io/painless/tox
  artifacts:
    reports:
      junit: tests/reports/*.xml
  coverage: /^TOTAL.+ (\d+)%$/
  only:
  - merge_requests
  - master

.build:
  stage: build
  image: docker.io/library/docker
  variables:
    IMAGE: ${DOCKER_REGISTRY}/${TARGET}/${CI_PROJECT_NAME}
  before_script:
  - docker login -u gitlab-ci -p ${KUBE_TOKEN} ${DOCKER_REGISTRY}
  - docker pull "${IMAGE}:latest" || true
  script:
  - docker build -t "${IMAGE}:${CI_COMMIT_SHA}"
                 -t "${IMAGE}:latest"
                 -f "deployment/application/Dockerfile" .
  - docker push "${IMAGE}"

.generate-secrets:
  variables:
    APPLICATION_NAME: application{% if cookiecutter.environment_strategy == 'shared' %}-${CI_ENVIRONMENT_NAME}{% endif %}
    DATABASE_HOST: {{ cookiecutter.database|lower }}{% if cookiecutter.environment_strategy == 'shared' %}-${CI_ENVIRONMENT_NAME}{% endif %}
    DATABASE_NAME: {{ cookiecutter.project_slug.replace('-', '_') }}
    DATABASE_USER: {{ cookiecutter.project_slug.replace('-', '_') }}
  before_script:
  - export DJANGO_SECRET_KEY=$(cat /dev/urandom | tr -dc A-Za-z0-9 | head -c50)
  - export DATABASE_PASSWORD=$(cat /dev/urandom | tr -dc A-Za-z0-9 | head -c16)
  - oc -n ${TARGET} get secret ${APPLICATION_NAME} ||
    oc -n ${TARGET} create secret generic ${APPLICATION_NAME}
      --from-literal=DJANGO_DATABASE_URL={{ cookiecutter.database|lower }}://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}/${DATABASE_NAME}
      --from-literal=DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
{%- if cookiecutter.monitoring == 'Sentry' %}
      --from-literal=SENTRY_DSN=${SENTRY_DSN}
{%- endif %}
  - oc -n ${TARGET} get secret ${DATABASE_HOST} ||
    oc -n ${TARGET} create secret generic ${DATABASE_HOST}
      --from-literal=POSTGRESQL_DATABASE=${DATABASE_NAME}
      --from-literal=POSTGRESQL_USERNAME=${DATABASE_USER}
      --from-literal=POSTGRESQL_PASSWORD=${DATABASE_PASSWORD}

.deploy:
  stage: deploy
  extends: .generate-secrets
  environment:
    url: "${KUBE_URL}/console/project/{{ cookiecutter.project_slug }}{% if cookiecutter.environment_strategy == 'dedicated' %}-${CI_ENVIRONMENT_NAME}{% endif %}/overview"
  image: docker.io/appuio/oc:v3.11
  script:
  - echo "ENVIRONMENT=${CI_ENVIRONMENT_NAME}" >> deployment/application/base/application.env
  - echo "REVISION=${CI_COMMIT_SHORT_SHA}" >> deployment/application/base/application.env
{%- if cookiecutter.environment_strategy == 'dedicated' %}
  - oc tag "${SOURCE}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA}"
           "${TARGET}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA}"
{%- endif %}
  - pushd deployment/application/base &&
    kustomize edit set image IMAGE="docker-registry.default.svc:5000/${TARGET}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA}" &&
    popd
  - kustomize build deployment/application/overlays/${CI_ENVIRONMENT_NAME} | oc apply -f -
  - kustomize build deployment/database/overlays/${CI_ENVIRONMENT_NAME} | oc apply -f -
