  - script:
    - &define-vars
      DJANGO_SECRET_KEY=$(cat /dev/urandom | tr -dc A-Za-z0-9 | head -c50)
      DATABASE_PASSWORD=$(cat /dev/urandom | tr -dc A-Za-z0-9 | head -c16)
{%- if cookiecutter.environment_strategy == 'shared' %}
      SOURCE={{ cookiecutter.cloud_project }}
      TARGET={{ cookiecutter.cloud_project }}
{%- else %}
      SOURCE=${SOURCE:-{{ cookiecutter.cloud_project }}}
      TARGET=${TARGET:-{{ cookiecutter.cloud_project }}}
{%- endif %}
      SUFFIX="${SUFFIX}"
      LABEL={{ cookiecutter.project_slug }}${SUFFIX}
      APPLICATION=${APPLICATION:-application${SUFFIX}}
      DATABASE_HOST=${DATABASE_HOST:-{{ cookiecutter.database|lower }}${SUFFIX}}
      DATABASE_NAME={{ cookiecutter.project_slug.replace('-', '_') }}
      DATABASE_USER={{ cookiecutter.project_slug.replace('-', '_') }}
    - &generate-secrets-app
      oc get secret ${APPLICATION} ||
      oc create secret generic ${APPLICATION}
        --from-literal=DJANGO_DATABASE_URL={{ cookiecutter.database|lower }}://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}/${DATABASE_NAME}
        --from-literal=DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
  {%- if cookiecutter.monitoring == 'Sentry' %}
        --from-literal=SENTRY_DSN=${SENTRY_DSN}
  {%- endif %}
    - &generate-secrets-db
      oc get secret ${DATABASE_HOST} ||
      oc create secret generic ${DATABASE_HOST}
        --from-literal=POSTGRESQL_DATABASE=${DATABASE_NAME}
        --from-literal=POSTGRESQL_USERNAME=${DATABASE_USER}
        --from-literal=POSTGRESQL_PASSWORD=${DATABASE_PASSWORD}
    - &cleanup-resources
      seiso configmaps -l app=${LABEL} --delete &&
      seiso secrets -l app=${LABEL} --delete &&
      seiso image history {{ cookiecutter.project_slug }} --delete &&
      seiso image orphans {{ cookiecutter.project_slug }} --delete
    - &cloud-login
      oc login ${KUBE_URL} --token="${KUBE_TOKEN}" -n ${TARGET}
    - &cloud-tag-image
      oc tag "${SOURCE}/{{ cookiecutter.project_slug }}:${BITBUCKET_COMMIT}"
             "${TARGET}/{{ cookiecutter.project_slug }}:${IMAGE_TAG}"
    - &cloud-set-image
      pushd deployment/application/base &&
      kustomize edit set image IMAGE="docker-registry.default.svc:5000/${TARGET}/{{ cookiecutter.project_slug }}:${IMAGE_TAG}" &&
      popd
    - &cloud-apply-app
      pushd deployment/application/overlays/${BITBUCKET_DEPLOYMENT_ENVIRONMENT} &&
      kustomize edit set namesuffix -- "${SUFFIX}" &&
      kustomize edit add label "app:${LABEL}" &&
      kustomize build | oc apply -f - &&
      popd
    - &cloud-apply-db
      pushd deployment/database/overlays/${BITBUCKET_DEPLOYMENT_ENVIRONMENT} &&
      kustomize edit set namesuffix -- "${SUFFIX}" &&
      kustomize edit add label "app:${LABEL}" &&
      kustomize build | oc apply -f - &&
      popd

  - step: &deploy-review-app
      name: Deploy Review App
      deployment: development
      image: docker.io/appuio/oc:v3.11
      script:
      - IMAGE_TAG=${BITBUCKET_COMMIT}
{%- if cookiecutter.environment_strategy == 'dedicated' %}
        SOURCE={{ cookiecutter.cloud_project }}-development
        TARGET={{ cookiecutter.cloud_project }}-development
{%- endif %}
        SUFFIX=-review-pr${BITBUCKET_PR_ID}
      - *define-vars
      - *cloud-login
      - *cloud-tag-image
      - *generate-secrets-app
      - *generate-secrets-db
      - *cloud-set-image
      - *cloud-apply-app
      - *cloud-apply-db
      - echo -e "\n"
                "Review App has been deployed to:\n"
                "- ${KUBE_URL}/console/project/${TARGET}/overview\n"
                "\n"
                "Review App is available at:\n"
                "- https://${LABEL}-${TARGET}.appuioapp.ch/\n"
                "\n"
                "Remove all related resources with >   ++ USE WITH CAUTION ++\n"
                "  oc delete all,configmap,pvc,secret -n ${TARGET} -l app=${LABEL}"

  - step: &deploy-integration
      name: Deploy to Integration
      deployment: integration
      image: docker.io/appuio/oc:v3.11
      script:
      - IMAGE_TAG=${BITBUCKET_COMMIT}
{%- if cookiecutter.environment_strategy == 'dedicated' %}
        SOURCE={{ cookiecutter.cloud_project }}-development
        TARGET={{ cookiecutter.cloud_project }}-integration
{%- else %}
        SUFFIX=-integration
{%- endif %}
      - *define-vars
      - *cloud-login
      - *cloud-tag-image
      - *cleanup-resources
      - *generate-secrets-app
      - *generate-secrets-db
      - *cloud-set-image
      - *cloud-apply-app
      - *cloud-apply-db
      - echo -e "\n"
                "Application has been deployed to:\n"
                "- ${KUBE_URL}/console/project/${TARGET}/overview\n"
                "\n"
                "Application is available at:\n"
                "- https://${LABEL}-${TARGET}.appuioapp.ch/"

  - step: &deploy-production
      name: Deploy to Production
      deployment: production
      image: docker.io/appuio/oc:v3.11
      script:
      - IMAGE_TAG=${BITBUCKET_TAG}
{%- if cookiecutter.environment_strategy == 'dedicated' %}
        SOURCE={{ cookiecutter.cloud_project }}-development
        TARGET={{ cookiecutter.cloud_project }}-production
{%- else %}
        SUFFIX=-production
{%- endif %}
      - *define-vars
      - *cloud-login
      - *cloud-tag-image
      - *cleanup-resources
      - *generate-secrets-app
      - *generate-secrets-db
      - *cloud-set-image
      - *cloud-apply-app
      - *cloud-apply-db
      - echo -e "\n"
                "Application has been deployed to:\n"
                "- ${KUBE_URL}/console/project/${TARGET}/overview\n"
