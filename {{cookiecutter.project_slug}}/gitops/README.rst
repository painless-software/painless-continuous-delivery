{{ cookiecutter.project_name }} GitOps
{{ '=' * (cookiecutter.project_name|length + 7) }}

{{ cookiecutter.project_description }} (GitOps part)

Overview
--------

This project handles the deployment of our application landscape, totally in
a GitOps fashion.  This means, the deployment configuration is applied by an
automation component *from inside* the target environment, continuously.

The applications we deploy have their own repositories, which only deal with
building and pushing their application images to the image registry:
*(HINT: Keep this list up-to-date!)*

- `{{ cookiecutter.project_name }} <https://{{ cookiecutter.vcs_platform|lower }}/{{ cookiecutter.vcs_account }}/{{ cookiecutter.vcs_project }}>`__

Automation Mechanics
^^^^^^^^^^^^^^^^^^^^

{% if cookiecutter.environment_strategy == 'dedicated' -%}
We have 3 environments corresponding to 3 namespaces on our container
platform: *development*, *integration*, *production*
{%- else -%}
We have 3 environments corresponding to 3 deployments in a single namespace
on our container platform: *development*, *integration*, *production*
{%- endif %}

{% set review_tag = 'review-mr<id>' if cookiecutter.ci_service == '.gitlab-ci.yml' else 'review-pr<id>' -%}
- Any image tagged ``{{ review_tag }}`` that is pushed to the image registry
  can be deployed in *development*.
- Any updated image tagged ``latest`` in the image registry triggers a
  deployment of the related resources on *integration*.
- An image with a `semver`_ version tag triggers a deployment of all
  related resources on *production*.

.. _semver: https://semver.org/

Initial Setup
^^^^^^^^^^^^^

The Kubernetes manifests in this repository are managed using `Flux`_ and the
`Flux Helm Operator`_.  Make sure you have cloned this repository from its
original location, then run the included bootstrap script to install and
configure both components on your Kubernetes cluster:

.. code-block:: console

    ./bootstrap.sh

Flux and its Helm Operator are then installed in their own namespace in the
cluster.

.. _Flux: https://github.com/fluxcd/flux
.. _Flux Helm Operator: https://github.com/fluxcd/helm-operator

Credits
^^^^^^^

Made with â™¥ by `Painless Continuous Delivery`_ Cookiecutter. This project was
generated by:

.. code-block:: console

    cookiecutter gh:painless-software/painless-continuous-delivery \
        project_name="{{ cookiecutter.project_name }}" \
        project_description="{{ cookiecutter.project_description }}" \
        vcs_platform="{{ cookiecutter.vcs_platform }}" \
        vcs_account="{{ cookiecutter.vcs_account }}" \
        vcs_project="{{ cookiecutter.vcs_project }}" \
        ci_service="{{ cookiecutter.ci_service }}" \
        cloud_platform="{{ cookiecutter.cloud_platform }}" \
        cloud_account="{{ cookiecutter.cloud_account }}" \
        cloud_project="{{ cookiecutter.cloud_project }}" \
        environment_strategy="{{ cookiecutter.environment_strategy }}" \
        deployment_strategy="{{ cookiecutter.deployment_strategy }}" \
        gitops_project="{{ cookiecutter.gitops_project }}" \
        docker_registry="{{ cookiecutter.docker_registry }}" \
        registry_user="{{ cookiecutter.registry_user }}" \
        automation_user="{{ cookiecutter.automation_user }}" \
        framework="{{ cookiecutter.framework }}" \
        database="{{ cookiecutter.database }}" \
        cronjobs="{{ cookiecutter.cronjobs }}" \
        checks="{{ cookiecutter.checks }}" \
        tests="{{ cookiecutter.tests }}" \
        monitoring="{{ cookiecutter.monitoring }}" \
        license="{{ cookiecutter.license }}" \
        --no-input

.. _Painless Continuous Delivery: https://github.com/painless-software/painless-continuous-delivery/
