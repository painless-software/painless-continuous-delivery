[tox]
envlist = django{18,19,110,111},symfony{28,30,31,32}
skipsdist = True

[testenv]
recreate = True
deps =
    autopep8
    django18: Django>=1.8,<1.9
    django19: Django>=1.9,<1.10
    django110: Django>=1.10,<1.11
    django111: Django>=1.11,<2
    flake8
commands =
    # NOTE: platform independent solution for `mkdir -p {toxworkdir}/{envname}/_`
    python -c "import os; os.mkdir('{toxworkdir}/{envname}/_')"
    django-admin startproject application {toxworkdir}/{envname}/_
    # TODO: Fix for non-Unices by using Python (OS X would need gsed)
    sed -i \
        -e '/^Generated by .django-admin startproject. using Django/d' \
        -e '/^For more information on this file, see/d' \
        -e '/^For the full list of settings and their values, see/d' \
        -e '/^https:..docs.djangoproject.com.en..*.settings/d' \
        -e '/^# Quick-start development settings - unsuitable for production/d' \
        -e '/^# https:..docs.djangoproject.com.en./d' \
        -e '/^# See https:..docs.djangoproject.com.en./d' \
        -e '/^# Build paths inside the project like this:/d' \
        -e 's/^import os/from os.path import abspath, dirname, join/' \
        -e 's/os.path.dirname(os.path.dirname(os.path.abspath(__file__)))/dirname(dirname(abspath(__file__)))/' \
        -e 's/os.path.join(/join(/g' \
        -e '/^# SECURITY WARNING: /d' \
        {toxworkdir}/{envname}/_/application/settings.py
    # TODO: Add template code for database selection (e.g. {% if cookiecutter.database == 'Postgres' %})
    # TODO: Add LANGUAGES = [('en', _('English')),] next to LANGUAGE_CODE = 'en'
    # TODO: Add LocaleMiddleware (between SessionMiddleware and CommonMiddleware)
    # TODO: Accomodate SITE_ID / django.contrib.sites or make it unneeded
    # TODO: Add STATIC_ROOT = join(BASE_DIR, 'static')
    # TODO: Ensure STATIC_URL = '/media/' is set
    # TODO: Add MEDIA_ROOT = join(BASE_DIR, 'media')
    # TODO: Add MEDIA_URL = '/media/'
    # TODO: ensure static and media folders exist and have proper permissions
    # TODO: replace secret settings by environment getters
    # TODO: Add RAVEN_CONFIG = { ... } and LOGGING
    # TODO: Add Django default templates in application app (base, 400, 403, 440, 500)
    autopep8 --aggressive --in-place {toxworkdir}/{envname}/_/application/settings.py
    flake8 {toxworkdir}/{envname}/_/
whitelist_externals =
    sed

[testenv:clean]
deps =
commands =
    # NOTE: platform independent solution for `rm -r {toxworkdir}`
    python -c "import shutil; shutil.rmtree('{toxworkdir}',ignore_errors=True)"

[testenv:symfony]
# LTS versions schedule
# http://symfony.com/doc/current/contributing/community/releases.html#schedule
#
# 1. install composer (`apt-get install composer php-xml`)
# 2. generate Symfony project skeleton using composer
#  - http://symfony.com/doc/current/setup.html#creating-symfony-applications-with-composer
# 3. set SYMFONY__* variables in Apache Vhost
deps =
passenv = *
setenv =
    SYMFONY_VERSION=2.8
commands =
    composer --working-dir={toxworkdir}/{envname} --no-interaction --quiet create-project symfony/framework-standard-edition:{env:SYMFONY_VERSION} _
    composer --working-dir={toxworkdir}/{envname} --no-interaction --quiet require friendsofphp/php-cs-fixer
    {toxworkdir}/{envname}/vendor/bin/php-cs-fixer fix {toxworkdir}/{envname}/_
whitelist_externals =
    composer

[testenv:symfony28]
deps =
passenv = *
setenv =
    SYMFONY_VERSION=2.8.*
commands =
    {[testenv:symfony]commands}
whitelist_externals =
    {[testenv:symfony]whitelist_externals}

[testenv:symfony30]
deps =
passenv = *
setenv =
    SYMFONY_VERSION=3.0.*
commands =
    {[testenv:symfony]commands}
whitelist_externals =
    {[testenv:symfony]whitelist_externals}

[testenv:symfony31]
deps =
passenv = *
setenv =
    SYMFONY_VERSION=3.1.*
commands =
    {[testenv:symfony]commands}
whitelist_externals =
    {[testenv:symfony]whitelist_externals}

[testenv:symfony32]
deps =
passenv = *
setenv =
    SYMFONY_VERSION=3.2.*
commands =
    {[testenv:symfony]commands}
whitelist_externals =
    {[testenv:symfony]whitelist_externals}
