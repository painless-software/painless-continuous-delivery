[tox]
envlist = symfony-{lts,stable}
skip_install = True
skipsdist = True

[testenv]
# LTS versions schedule
# https://symfony.com/doc/current/contributing/community/releases.html#schedule
recreate = True
passenv = *
changedir = {toxworkdir}/{envname}
commands =
    bash -c "composer -q 2> /dev/null || echo '*** Composer not found. Try running `apt-get install composer php-mbstring php-xml` ***'"
    bash -c "symfony -q 2> /dev/null || echo '*** Symfony not found. Try running `wget https://get.symfony.com/cli/installer -O - | bash` ***'"
    symfony new --version={env:SYMFONY_VERSION} _
    # regenerate lock file, add dependencies, fix PHP code style violations, remove superfluous files
    bash -c 'cd _ && composer require --dev symfony/phpunit-bridge'
    bash -c 'cd _ && composer require --dev friendsofphp/php-cs-fixer'
    bash -c 'cd _ && vendor/friendsofphp/php-cs-fixer/php-cs-fixer fix . && rm -f .php_cs.cache'
    bash -c "cd _ && rm -rfv LICENSE README.md UPGRADE*.md"
    bash -c 'cd _ && rm -f composer.lock && composer install'
    # add commands to "scripts": section
    sed -i _/composer.json -e 's#^    "scripts": {$#    "scripts": {\n        "phpunit": [\n            "bin/phpunit --configuration app/phpunit.xml.dist src"\n        ],#'
    sed -i _/composer.json -e 's#^    "scripts": {$#    "scripts": {\n        "twig": [\n            "app/console lint:twig"\n        ],#'
    sed -i _/composer.json -e 's#^    "scripts": {$#    "scripts": {\n        "phpcs": [\n            "bin/php-cs-fixer fix --dry-run --using-cache=no --verbose src"\n        ],#'
    sed -i _/composer.json -e 's#^    "scripts": {$#    "scripts": {\n        "test": [\n            "@composer phpunit"\n        ],#'
    sed -i _/composer.json -e 's#^    "scripts": {$#    "scripts": {\n        "check": [\n            "@composer phpcs",\n            "@composer twig"\n        ],#'
    echo ".env" >> .gitignore
allowlist_externals =
    bash
    composer
    echo
    sed
    symfony

[testenv:symfony-lts]
setenv = SYMFONY_VERSION=lts

[testenv:symfony-stable]
setenv = SYMFONY_VERSION=stable
