[tox]
envlist = django{111,20,21}
skip_install = True
skipsdist = True

[testenv]
recreate = True
deps =
    autopep8
    django111: Django>=1.11,<2
    django20: Django>=2,<2.1
    django21: Django>=2.1,<2.2
    django-environ
    flake8
    pycodestyle<2.4
    pylint-django
commands =
    # NOTE: platform independent solution for `mkdir -p {toxworkdir}/{envname}/_`
    python -c "import os; os.mkdir('{toxworkdir}/{envname}/_')"
    django-admin startproject application {toxworkdir}/{envname}/_
    # TODO: Fix for non-Unices by using Python (OS X would need gsed)
    sed -i \
        -e '/^Generated by .django-admin startproject. using Django/d' \
        -e '/^For more information on this file, see/d' \
        -e '/^For the full list of settings and their values, see/d' \
        -e '/^https:..docs.djangoproject.com.en..*.settings/d' \
        -e '/^# Quick-start development settings - unsuitable for production/d' \
        -e '/^# https:..docs.djangoproject.com.en./d' \
        -e '/^# See https:..docs.djangoproject.com.en./d' \
        -e '/^# Build paths inside the project like this:/d' \
        -e 's/^import os/from os.path import abspath, dirname, join\nfrom environ import Env/' \
        -e 's/os.path.dirname(os.path.dirname(os.path.abspath(__file__)))/dirname(dirname(abspath(__file__)))/' \
        -e 's/os.path.join(/join(/g' \
        -e "s/^SECRET_KEY = .*$/env = Env()  # pylint: disable=invalid-name\nEnv.read_env(join(BASE_DIR, '.env'))\n\nDEBUG = env.bool('DJANGO_DEBUG', default=True)\n\nSECRET_KEY = 'dummy-secret' if DEBUG else env('DJANGO_SECRET_KEY')/" \
        -e "s/^ALLOWED_HOSTS = .*$/ALLOWED_HOSTS = \[\] if DEBUG else \[\n    'example.com',\n]/" \
        -e "s#^STATIC_URL = .*$#STATIC_ROOT = join(BASE_DIR, 'static')\nSTATIC_URL = '/static/'#" \
        -e '/^DEBUG = True$/d' \
        -e '/^# SECURITY WARNING: /d' \
        {toxworkdir}/{envname}/_/application/settings.py
    sed -i \
        -e 's/import django$/import django  # noqa/' \
        {toxworkdir}/{envname}/_/manage.py
    # TODO: Add template code for database selection (e.g. {% if cookiecutter.database == 'Postgres' %})
    # TODO: Add LANGUAGES = [('en', _('English')),] next to LANGUAGE_CODE = 'en'
    # TODO: Add LocaleMiddleware (between SessionMiddleware and CommonMiddleware)
    # TODO: Accomodate SITE_ID / django.contrib.sites or make it unneeded
    # TODO: Add STATIC_ROOT = join(BASE_DIR, 'static')
    # TODO: Ensure STATIC_URL = '/media/' is set
    # TODO: Add MEDIA_ROOT = join(BASE_DIR, 'media')
    # TODO: Add MEDIA_URL = '/media/'
    # TODO: ensure static and media folders exist and have proper permissions
    # TODO: replace secret settings by environment getters
    # TODO: Add RAVEN_CONFIG = { ... } and LOGGING
    # TODO: Add Django default templates in application app (base, 400, 403, 440, 500)
    autopep8 --in-place {toxworkdir}/{envname}/_/application/settings.py
    flake8 {toxworkdir}/{envname}/_/ --max-line-length=100
    pylint {toxworkdir}/{envname}/_/application --load-plugins=pylint_django
whitelist_externals =
    sed
